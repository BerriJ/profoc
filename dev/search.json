[{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://profoc.berrisch.biz/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://profoc.berrisch.biz/dev/articles/methods.html","id":"methods-of-the-profoc-package","dir":"Articles","previous_headings":"","what":"Methods of the profoc package","title":"Methods","text":"vignette explains use predict() update(). two important functions using profoc production. predict() method used combine new expert forecasts using recent combination weights. useful want combine new expert forecasts recent combination weights, new observations realized yet. later point time, update() can used update combination weights evaluating realized observations. assume followed vignette(\"Introduction\") already, reuse data model .","code":""},{"path":"https://profoc.berrisch.biz/dev/articles/profoc.html","id":"a-short-introduction-to-profoc","dir":"Articles","previous_headings":"","what":"A Short Introduction to profoc","title":"Introduction","text":"profoc offers user-friendly way apply online-learning algorithms forecast combination. algorithms reach fast convergence rates efficient. monograph (Cesa-Bianchi Lugosi 2006) great starting point reading theory behind algorithms. algorithms implemented C++ can used R via Rcpp (Eddelbuettel 2013). main function online() offers high-level interface learning algorithms extensions. wrapper C++ class conline. class functions low-level interface. granularity allows high degree flexibility. exposed offer maximum flexibility advanced users. utilized Rcpp Modules (Eddelbuettel François 2022) expose class R. introductory vignette, demonstrate use online() run core algorithms. also show results can inspected. Various popular extensions core algorithms, methods deployment production, low-level interface covered separate vignettes.","code":""},{"path":"https://profoc.berrisch.biz/dev/articles/profoc.html","id":"online-learning","dir":"Articles","previous_headings":"A Short Introduction to profoc","what":"Online Learning","title":"Introduction","text":"brevity, consider univariate probabilistic forecast combination problem. Let \\(\\boldsymbol{y}\\) vector realized values length \\(\\text{T} = 32\\). Additionally, \\(\\text{K}=2\\) probabilistic expert forecasts observation \\(\\boldsymbol{y}\\). probabilistic forecasts equidistant grids \\(\\text{P}\\) quantiles. goal combine expert forecasts obtain combined forecast \\(\\widetilde{y}_{t|t-1}\\) observation \\(y_t\\) \\(\\boldsymbol{y}\\). Formally: \\[\\begin{equation}     \\widetilde{y}_{t|t-1} = \\sum_{k=1}^K w_{t,k} \\widehat{y}_{t,k}. \\end{equation}\\] Let’s simulate setting R apply combination algorithm. situation can depicted follows:  parameters online() contain sensible defaults. , example, sufficient provide data probability grid. code compute CRPS Learning algorithm described (Berrisch Ziel 2021). algorithm based Bernstein online aggregation (Wintenberger 2017) uses quantile loss calculate weights probability grid. algorithms like ewa ml-poly can computed setting method argument accordingly. Printing result object present loss experts computed combination: averages time, probability grid, possibly marginals. losses Experts Forecaster can accessed via combination$experts_loss combination$forecaster_loss, respectively. continue inspecting weights assigned online learning process: can visualize recent weights autoplot():  Expert one receives high weights, particularly right tail. predictions expert one closer true DGP, especially right tail. currently offer tidy() methods selected output elements (weights, predictions, forecaster_loss, experts_loss). methods return tibble analysis. example, can easily plot weights experts selected quantiles time just lines code using dplyr ggplot2:  Finally, can inspect visualize predictions:  Vignettes advanced topics added future. now, refer function references.","code":"set.seed(1) T <- 2^5 # Observations N <- 2 # Experts P <- 99 # Size of probability grid probs <- 1:P / (P + 1)  y <- matrix(rnorm(T)) # Realized observations  # Experts deviate in mean and standard deviation from true process experts_mu <- c(-1, 3) experts_sd <- c(1, 2)  experts <- array(dim = c(T, P, N)) # Expert predictions  for (t in 1:T) {   experts[t, , 1] <- qnorm(probs, mean = experts_mu[1], sd = experts_sd[1])   experts[t, , 2] <- qnorm(probs, mean = experts_mu[2], sd = experts_sd[2]) } library(profoc)  combination <- online(   y = y,   experts = experts,   tau = probs ) print(combination) #>  Name        Loss      #>  E1          0.4486700 #>  E2          0.9804200 #>  Combination 0.2925581 dim(combination$weights) #> [1] 33  1 99  2 autoplot(combination) library(dplyr) library(ggplot2)  tidy(combination$weights) |>   filter(p %in% c(0.05, 0.5, 0.95)) |>   ggplot(aes(x = t, y = w, col = k)) +   geom_line(linewidth = 1) +   facet_wrap(~p, ncol = 1) tidy(combination$predictions) #> # A tibble: 3,168 × 4 #>        t d         p prediction #>    <int> <chr> <dbl>      <dbl> #>  1     1 D1     0.01     -2.49  #>  2     1 D1     0.02     -2.08  #>  3     1 D1     0.03     -1.82  #>  4     1 D1     0.04     -1.63  #>  5     1 D1     0.05     -1.47  #>  6     1 D1     0.06     -1.33  #>  7     1 D1     0.07     -1.21  #>  8     1 D1     0.08     -1.11  #>  9     1 D1     0.09     -1.01  #> 10     1 D1     0.1      -0.922 #> # ℹ 3,158 more rows  tidy(combination$predictions) |>   ggplot(aes(x = t, y = prediction, group = p, colour = p)) +   geom_line() +   scale_color_continuous(low = \"#FFDD00\", high = \"#0057B7\") +   # A little hacky way to add the realized values   geom_line(aes(x = t, y = rep(y, each = 99)),     linetype = \"dashed\", col = \"black\", linewidth = 1   )"},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonathan Berrisch. Author, maintainer. Florian Ziel. Author.","code":""},{"path":"https://profoc.berrisch.biz/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Berrisch, J., & Ziel, F. (2023). profoc Package: R package probabilistic forecast combination using CRPS Learning. R package version 1.2.2.9000. https://profoc.berrisch.biz, https://github.com/BerriJ/profoc","code":"@Manual{profoc_package,   title = {The profoc Package: An R package for probabilistic forecast combination using CRPS Learning},   author = {Jonathan Berrisch and Florian Ziel},   year = {2023},   note = {{R package version 1.2.2.9000}},   url = {https://profoc.berrisch.biz}, }"},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/index.html","id":"an-r-package-for-probabilistic-forecast-combination","dir":"","previous_headings":"","what":"An R package for probabilistic forecast combination","title":"Probabilistic Forecast Combination Using CRPS Learning","text":"primary function online can used combine probabilistic forecasts using CRPS learning algorithm introduced Berrisch, Ziel (2021): Pre-Print, Publication. function batch can used similar way batch optimization. Common methods like summary, print, plot, update, predict available.","code":""},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/index.html","id":"install-from-cran","dir":"","previous_headings":"Installation","what":"Install from CRAN","title":"Probabilistic Forecast Combination Using CRPS Learning","text":"can install latest stable release CRAN using:","code":"install.packages(\"profoc\")"},{"path":"https://profoc.berrisch.biz/dev/index.html","id":"install-from-github","dir":"","previous_headings":"Installation","what":"Install from GitHub","title":"Probabilistic Forecast Combination Using CRPS Learning","text":"can install latest stable release GitHub using: can install latest development version GitHub using:","code":"# install.packages(\"remotes\") remotes::install_github(\"BerriJ/profoc\") # install.packages(\"remotes\") remotes::install_github(\"BerriJ/profoc@develop\")"},{"path":"https://profoc.berrisch.biz/dev/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Probabilistic Forecast Combination Using CRPS Learning","text":"can find documentation profoc.berrisch.biz.","code":""},{"path":"https://profoc.berrisch.biz/dev/index.html","id":"contributions-and-issues","dir":"","previous_headings":"","what":"Contributions and Issues","title":"Probabilistic Forecast Combination Using CRPS Learning","text":"Feel free raise issue find something working properly. welcome contribute profoc. Please base pull requests develop branch.","code":""},{"path":"https://profoc.berrisch.biz/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Probabilistic Forecast Combination Using CRPS Learning","text":"GNU General Public License (≥ 3)","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/autoplot.batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Autoplot method for batch models — autoplot.batch","title":"Autoplot method for batch models — autoplot.batch","text":"Plots recent weights quantile using ggplot2.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/autoplot.batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autoplot method for batch models — autoplot.batch","text":"","code":"# S3 method for batch autoplot(object, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/autoplot.batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autoplot method for batch models — autoplot.batch","text":"object Object class inheriting 'batch' ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/autoplot.online.html","id":null,"dir":"Reference","previous_headings":"","what":"Autoplot method for online models — autoplot.online","title":"Autoplot method for online models — autoplot.online","text":"Plots recent weights quantile using ggplot2.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/autoplot.online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autoplot method for online models — autoplot.online","text":"","code":"# S3 method for online autoplot(object, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/autoplot.online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autoplot method for online models — autoplot.online","text":"object Object class inheriting 'online' ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilistic Forecast Combination - Batch — batch","title":"Probabilistic Forecast Combination - Batch — batch","text":"Returns predictions weights calculated sequential numeric optimization. optimization done stepwise, always calculating one-step-ahead forecast.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilistic Forecast Combination - Batch — batch","text":"","code":"batch(   y,   experts,   tau = 1:dim(experts)[2]/(dim(experts)[2] + 1),   affine = FALSE,   positive = FALSE,   intercept = FALSE,   debias = TRUE,   lead_time = 0,   initial_window = 30,   rolling_window = initial_window,   loss_function = \"quantile\",   loss_parameter = 1,   qw_crps = FALSE,   b_smooth = list(knots = length(tau), mu = 0.5, sigma = 1, nonc = 0, tailweight = 1, deg     = 1, periodic = FALSE),   p_smooth = list(knots = length(tau), mu = 0.5, sigma = 1, nonc = 0, tailweight = 1, deg     = 1, ndiff = 1.5, lambda = -Inf, periodic = FALSE),   forget = 0,   soft_threshold = -Inf,   hard_threshold = -Inf,   fixed_share = 0,   parametergrid_max_combinations = 100,   parametergrid = NULL,   forget_past_performance = 0,   allow_quantile_crossing = FALSE,   trace = TRUE )"},{"path":"https://profoc.berrisch.biz/dev/reference/batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilistic Forecast Combination - Batch — batch","text":"y numeric matrix realizations. probabilistic settings matrix dimension Tx1, multivariate settings TxP matrix. latter case, slice expert's array gets evaluated using corresponding column y matrix. experts array predictions dimension (Observations, Quantiles, Experts). tau numeric vector probabilities. affine Defines whether weights summing 1 . Defaults FALSE. positive Defines positivity constraint applied weights. Defaults FALSE. intercept Determines intercept added, defaults FALSE. true, new first expert added, always predicting 1. debias Defines whether intercepts weight constrained . TRUE (default), intercept weight unconstrained. affects results affine positive set TRUE. FALSE, intercept treated expert. lead_time offset expert forecasts. Defaults 0, means experts forecast t+1 t. Setting h means experts predictions refer t+1+h time t. weight updates delay accordingly. initial_window Defines size initial estimation window. rolling_window Defines size rolling window. Defaults value initial_window. Set number observations receive expanding window. loss_function Either \"quantile\", \"expectile\" \"percentage\". loss_parameter Optional parameter scaling power loss function. qw_crps Decides whether sum quantile scores (FALSE) quantile weighted CRPS (TRUE) minimized. Defaults FALSE. corresponds Berrisch & Ziel (2021) b_smooth named list determining B-Spline matrices probabilistic smoothing created. Default corresponds probabilistic smoothing. See details. p_smooth named list determining hat matrices  probabilistic P-Spline smoothing created. Default corresponds smoothing. See details. forget Adds exponential forgetting optimization. Past observations get less influence optimization. Defaults 0, corresponds forgetting. soft_threshold specified, following soft threshold applied weights: w = sgn(w)*max(abs(w)-t,0) t soft_threshold parameter. Defaults -inf, means threshold applied. expert weights thresholded 0, weight 1 assigned expert highest weights prior thresholding. Thus soft_threshold = 1 leads 'follow leader' strategy method set \"ewa\". hard_threshold specified, following hard thresholding applied weights: w = w*(abs(w)>t) t threshold_hard parameter. Defaults -inf, means threshold applied. expert weights thresholded 0, weight 1 assigned expert highest weight prior thresholding. Thus hard_threshold = 1 leads 'follow leader' strategy method set \"ewa\". fixed_share Amount fixed share added weights. Defaults 0. 1 leads uniform weights. parametergrid_max_combinations Integer specifying maximum number parameter combinations considered. number possible combinations exceeds threshold, maximum allowed number randomly sampled. Defaults 100. parametergrid User supplied grid parameters. Can used combinations input vectors considered. Must matrix 13 columns (online) 12 columns batch following order: basis_knot_distance, basis_knot_distance_power, basis_deg, forget_regret, soft_threshold, hard_threshold, fixed_share, p_smooth_lambda, p_smooth_knot_distance, p_smooth_knot_distance_power, p_smooth_deg, p_smooth_ndiff, gamma. forget_past_performance Share past performance considered, resp. forgotten every iteration algorithm selecting best parameter combination. Defaults 0. allow_quantile_crossing Shall quantile crossing allowed? Defaults false, means predictions sorted ascending order. trace Print progress bar console? Defaults TRUE.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilistic Forecast Combination - Batch — batch","text":"Returns weights corresponding predictions. possible impose convexity constraint weights setting affine positive TRUE.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probabilistic Forecast Combination - Batch — batch","text":"batch selects various parameters automatically based past loss. , parameters smoothing parameters (see ) can specified numeric vectors containing values consider. package offers two options smoothing (Basis Smoothing P-Splines). Parameters b_smooth p_smooth take named lists create corresponding basis hat matrices. arguments : knots determines number knots created, mu, sigma, sigma, nonc, tailweight correspond parameters beta distribution, defines knots #distributed (see ?make_knots details) defaults create equidistant knot sequence, deg sets degree spline function also influences many outer knots used periodic determines whether spline basis periodic. possible provide vectors values parameters. case, parameter combinations used create respective matrices candidates considered online-learning. addition inputs mentioned  p_smooth requires ndiff determines degree differentiation applied basis-matrix (can take value including 1 2), lambda determines degree penalization applied smoothing, higher values give smoother weight functions. parameters, possible provide multiple values.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilistic Forecast Combination - Batch — batch","text":"","code":"if (FALSE) { T <- 50 # Observations N <- 2 # Experts P <- 9 # Quantiles prob_grid <- 1:P / (P + 1)  y <- rnorm(n = T) # Realized experts <- array(dim = c(T, P, N)) # Predictions for (t in 1:T) {     experts[t, , 1] <- qnorm(prob_grid, mean = -1, sd = 1)     experts[t, , 2] <- qnorm(prob_grid, mean = 3, sd = sqrt(4)) }  model <- batch(     y = matrix(y),     experts = experts,     p_smooth = list(lambda = 10) )  print(model) plot(model) autoplot(model) }"},{"path":"https://profoc.berrisch.biz/dev/reference/conline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an conline Object from the conline C++ Class — conline","title":"Create an conline Object from the conline C++ Class — conline","text":"Allows creation Online Object C++ R using C++ conline class.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/conline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an conline Object from the conline C++ Class — conline","text":"conline object C++ conline Class.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/conline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an conline Object from the conline C++ Class — conline","text":"","code":"conline_obj <- new(conline)"},{"path":"https://profoc.berrisch.biz/dev/reference/make_knots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of knots for splines — make_knots","title":"Create a vector of knots for splines — make_knots","text":"function creates knot vector splines. knots distributed according beta distribution. first input defines number inner knots. total number knots n + 2 * order.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/make_knots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of knots for splines — make_knots","text":"","code":"make_knots(n, mu = 0.5, sig = 1, nonc = 0, tailw = 1, deg = 1)"},{"path":"https://profoc.berrisch.biz/dev/reference/make_knots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of knots for splines — make_knots","text":"n Number knots mu Beta distribution location parameter sig Beta distribution scale parameter nonc Beta distribution noncentrality parameter tailw Tailweight deg Degree splines","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/online.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilistic Forecast Combination - Online — online","title":"Probabilistic Forecast Combination - Online — online","text":"Returns predictions weights calculated online-learning algorithms using CRPS Learning.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilistic Forecast Combination - Online — online","text":"","code":"online(   y,   experts,   tau,   lead_time = 0,   loss_function = \"quantile\",   loss_parameter = 1,   loss_gradient = TRUE,   method = \"bewa\",   b_smooth_pr = list(knots = P, mu = 0.5, sigma = 1, nonc = 0, tailweight = 1, deg = 1,     periodic = FALSE),   p_smooth_pr = list(knots = P, mu = 0.5, sigma = 1, nonc = 0, tailweight = 1, deg = 1,     ndiff = 1.5, lambda = -Inf, periodic = FALSE),   b_smooth_mv = list(knots = D, mu = 0.5, sigma = 1, nonc = 0, tailweight = 1, deg = 1,     periodic = FALSE),   p_smooth_mv = list(knots = D, mu = 0.5, sigma = 1, nonc = 0, tailweight = 1, deg = 1,     ndiff = 1.5, lambda = -Inf, periodic = FALSE),   forget_regret = 0,   soft_threshold = -Inf,   hard_threshold = -Inf,   fixed_share = 0,   gamma = 1,   parametergrid_max_combinations = 100,   parametergrids = list(general = NULL, b_smooth_pr = NULL, p_smooth_pr = NULL,     b_smooth_mv = NULL, p_smooth_mv = NULL),   forget_past_performance = 0,   save_past_performance = FALSE,   save_predictions_grid = FALSE,   allow_quantile_crossing = FALSE,   init = NULL,   loss = NULL,   regret = NULL,   trace = TRUE )"},{"path":"https://profoc.berrisch.biz/dev/reference/online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilistic Forecast Combination - Online — online","text":"y numeric matrix realizations. probabilistic settings matrix dimension Tx1, multivariate settings TxP matrix. latter case, slice expert's array gets evaluated using corresponding column y matrix. experts array predictions dimension T x D x P x K (Observations x Variables x Quantiles x Experts) T x D x K T x P x K. tau numeric vector probabilities. lead_time offset expert forecasts. Defaults 0, means experts forecast t+1 t. Setting h means experts predictions refer t+1+h time t. weight updates delay accordingly. loss_function Either \"quantile\", \"expectile\" \"percentage\". loss_parameter Optional parameter scaling power loss function. loss_gradient Determines linearized version loss used. method One \"boa\", \"bewa\", \"ml_poly\" \"ewa\". \"bewa\" refers mixture boa ewa, including second order refinement boa, updating weights simple exponential weighting. b_smooth_pr named list determining B-Spline matrices probabilistic smoothing created. Default corresponds probabilistic smoothing. See details. p_smooth_pr named list determining hat matrices  probabilistic P-Spline smoothing created. Default corresponds smoothing. See details. b_smooth_mv named list determining B-Spline matrices  multivariate smoothing created. Default corresponds probabilistic smoothing. See details. p_smooth_mv named list determining hat matrices  probabilistic P-Spline smoothing created. Default corresponds smoothing. See details. forget_regret Share past regret considered, resp. forgotten every iteration algorithm. Defaults 0. soft_threshold specified, following soft threshold applied weights: w = sgn(w)*max(abs(w)-t,0) t soft_threshold parameter. Defaults -inf, means threshold applied. expert weights thresholded 0, weight 1 assigned expert highest weights prior thresholding. Thus soft_threshold = 1 leads 'follow leader' strategy method set \"ewa\". hard_threshold specified, following hard thresholding applied weights: w = w*(abs(w)>t) t threshold_hard parameter. Defaults -inf, means threshold applied. expert weights thresholded 0, weight 1 assigned expert highest weight prior thresholding. Thus hard_threshold = 1 leads 'follow leader' strategy method set \"ewa\". fixed_share Amount fixed share added weights. Defaults 0. 1 leads uniform weights. gamma Scaling parameter learning rate. parametergrid_max_combinations Integer specifying maximum number parameter combinations considered. number possible combinations exceeds threshold, maximum allowed number randomly sampled. Defaults 100. parametergrids User supplied grids parameters. Can used combinations input vectors considered. Must named list five matrices. matrices list must named : \"general\", \"b_smooth_pr\", \"b_smooth_mv\", \"p_smooth_pr\", \"p_smooth_mv\". \"general\" matrix must contain 11 named columns: \"forget_regret\", \"soft_threshold\", \"hard_threshold\", \"fixed_share\", \"basis_pr_idx\", \"basis_mv_idx\", \"hat_pr_idx\", \"hat_mv_idx\", \"gamma\", \"loss_share\", \"regret_share\". matrices determining basis smoothing (b_smooth_pr, b_smooth_mv) must contain following named columns: n, mu, sigma, nonc, tailw, deg, periodic. addition columns basis smoothing matrices, matrices determining penalized smoothing (p_smooth_pr, p_smooth_mv) must contain following columns: diff, lambda. *_idx columns general matrix determine row corresponding smoothing matrix used. forget_past_performance Share past performance considered, resp. forgotten every iteration algorithm selecting best parameter combination. Defaults 0. save_past_performance Whether past performance w.r.t considered parameter grid reported . Defaults FALSE save memory. Setting TRUE can memory intensive depending data considered grid. save_predictions_grid Whether predictions w.r.t considered parameter grid reported . Defaults FALSE. Setting TRUE can memory intensive depending data considered grid. allow_quantile_crossing Shall quantile crossing allowed? Defaults false, means predictions sorted ascending order. init named list containing \"init_weights\": Array dimension DxPxK used starting weights. \"R0\" matrix dimension PxK 1xK used starting regret. loss User specified loss array. Can also list elements \"loss_array\" \"share\", share mixes provided loss loss calculated profoc. 1 means, provided loss used. share can also vector shares consider. regret User specified regret array. specific, regret calculated profoc. Can also list elements \"regret_array\" \"share\", share mixes provided regret regret calculated profoc. 1 means, provided regret used. share can also vector shares consider. trace Print progress bar console? Defaults TRUE.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/online.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilistic Forecast Combination - Online — online","text":"Returns weights corresponding predictions.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/online.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probabilistic Forecast Combination - Online — online","text":"online selects various parameters automatically based past loss. , lambda, forget, fixed_share, gamma, smoothing parameters (see ) can specified numeric vectors containing values consider. package offers two options smoothing (Basis Smoothing P-Splines). options can used smooth weights dimension D (covariates) P (quantiles) . Parameters b_smooth_pr b_smooth_mv take named lists create corresponding basis matrices. arguments : knots determines number knots created, mu, sigma, sigma, nonc, tailweight correspond parameters beta distribution, defines knots #distributed (see ?make_knots details) defaults create equidistant knot sequence, deg sets degree spline function also influences many outer knots used periodic determines whether spline basis periodic. possible provide vectors values parameters. case, parameter combinations used create respective matrices candidates considered online-learning. Parameters p_smooth_pr p_smooth_mv determine hat-matrix creation P-Spline smoothing. addition inputs mentioned , require provide ndiff determines degree differentiation applied basis-matrix (can take value including 1 2), lambda determines degree penalization applied smoothing, higher values give smoother weight functions. parameters, possible provide multiple values.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/online.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilistic Forecast Combination - Online — online","text":"","code":"if (FALSE) { T <- 50 # Observations N <- 2 # Experts P <- 9 # Quantiles prob_grid <- 1:P / (P + 1)  y <- rnorm(n = T) # Realized experts <- array(dim = c(T, P, N)) # Predictions for (t in 1:T) {     experts[t, , 1] <- qnorm(prob_grid, mean = -1, sd = 1)     experts[t, , 2] <- qnorm(prob_grid, mean = 3, sd = sqrt(4)) }  model <- online(     y = matrix(y),     experts = experts,     tau = prob_grid,     p_smooth_pr = list(lambda = 10) )  print(model) plot(model)  new_y <- matrix(rnorm(1)) # Realized new_experts <- experts[T, , , drop = FALSE]  # Update will update the models weights etc if you provide new realizations model <- update(model, new_y = new_y, new_experts = new_experts)  # Predict will expand `model$predictions` by default model <- predict(model, new_experts = new_experts, update_model = TRUE) }"},{"path":"https://profoc.berrisch.biz/dev/reference/oracle.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilistic Forecast Combination - Oracle — oracle","title":"Probabilistic Forecast Combination - Oracle — oracle","text":"Returns predictions weights calculated numeric optimization. optimization done hindsight. means observations used.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/oracle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilistic Forecast Combination - Oracle — oracle","text":"","code":"oracle(y, experts, tau, affine = FALSE, positive = FALSE, intercept = FALSE, debias = TRUE, loss_function = \"quantile\", loss_parameter = 1, forget = 0)"},{"path":"https://profoc.berrisch.biz/dev/reference/oracle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilistic Forecast Combination - Oracle — oracle","text":"y numeric matrix realizations. probabilistic settings matrix dimension Tx1, multivariate settings TxP matrix. latter case, slice expert's array gets evaluated using corresponding column y matrix. experts array predictions dimension (Observations, Quantiles, Experts). tau numeric vector probabilities. affine Defines whether weights summing 1 . Defaults FALSE. positive Defines positivity constraint applied weights. Defaults FALSE. intercept Determines intercept added, defaults FALSE. true, new first expert added, always predicting 1. debias Defines whether intercepts weight constrained . TRUE (default), intercept weight unconstrained. affects results affine positive set TRUE. FALSE, intercept treated expert. loss_function Either \"quantile\", \"expectile\" \"percentage\". loss_parameter Optional parameter scaling power loss function. forget Adds exponential forgetting optimization. Past observations get less influence optimization. Defaults 0, corresponds forgetting.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/oracle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilistic Forecast Combination - Oracle — oracle","text":"Returns weights corresponding predictions. possible calculate best convex combination weights setting affine positive TRUE.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/oracle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilistic Forecast Combination - Oracle — oracle","text":"","code":"if (FALSE) { T <- 50 # Observations N <- 2 # Experts P <- 9 # Quantiles prob_grid <- 1:P / (P + 1)  y <- rnorm(n = T) # Realized experts <- array(dim = c(T, P, N)) # Predictions for (t in 1:T) {     experts[t, , 1] <- qnorm(prob_grid, mean = -1, sd = 1)     experts[t, , 2] <- qnorm(prob_grid, mean = 3, sd = sqrt(4)) }  model <- oracle(     y = matrix(y),     experts = experts ) }"},{"path":"https://profoc.berrisch.biz/dev/reference/penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"B-Spline penalty — penalty","title":"B-Spline penalty — penalty","text":"function calculates B-Spline basis penalty. follows procedure outlined paper Zheyuan Li, Jiguo Cao, 2022 \"General P-Splines Non-Uniform B-Splines\" doi:10.48550/arXiv.2201.06808 . equidistant knots coincides usual penalty based identitiy. non-equidistant knots weighted penalty respect knot distances. addition , added possibility calculate periodic penalties based periodic differencing matrices.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"B-Spline penalty — penalty","text":"","code":"penalty(knots, order, periodic = FALSE, max_diff = 999L)"},{"path":"https://profoc.berrisch.biz/dev/reference/penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"B-Spline penalty — penalty","text":"knots Vector knots. order Order Basis (degree + 1). periodic Whether penalties periodic . max_diff Maximum difference order calculate.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"B-Spline penalty — penalty","text":"Returns list (order - 1) penalty matrices.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"B-Spline penalty — penalty","text":"","code":"if (FALSE) { # Equidistant knots with order 2 knots <- 1:10  P <- penalty(knots, order = 2)  print(P[[1]]) # First differences  # Non equidistant knots knots <- c(0, 0, 0, 0, 1, 3, 4, 4, 4, 4)  P <- penalty(knots, order = 4)  print(P[[1]]) # First differences print(P[[2]]) # Second differences print(P[[3]]) # Third differences  # Periodic penalty for equidistant knots oder <- 4 deg <- order - 1 knots <- 1:15  penalty(knots, order = order, periodic = TRUE)[[1]] penalty(knots, order = order, periodic = TRUE)[[2]] penalty(knots, order = order, periodic = TRUE)[[3]] }"},{"path":"https://profoc.berrisch.biz/dev/reference/plot.batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for batch models — plot.batch","title":"Plot method for batch models — plot.batch","text":"Plots recent weights quantile.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/plot.batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for batch models — plot.batch","text":"","code":"# S3 method for batch plot(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/plot.batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for batch models — plot.batch","text":"x Object class inheriting 'batch' ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/plot.online.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for online models — plot.online","title":"Plot method for online models — plot.online","text":"Plots recent weights quantile.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/plot.online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for online models — plot.online","text":"","code":"# S3 method for online plot(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/plot.online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for online models — plot.online","text":"x Object class inheriting 'online' ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/predict.online.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for online models — predict.online","title":"Predict method for online models — predict.online","text":"Calculates predictions based new expert advice. update weights. new observations available use update instead. latter updates weights computes predictions.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/predict.online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for online models — predict.online","text":"","code":"# S3 method for online predict(object, new_experts, update_model = TRUE, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/predict.online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for online models — predict.online","text":"object Object class inheriting 'online' new_experts new expert predictions update_model Defines whether model object updated . TRUE, new forecaster expert predictions appended onto respective object items. Defaults TRUE. ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/predict.online.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for online models — predict.online","text":"predict.online produces updated model object.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/print.batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for batch models — print.batch","title":"Print method for batch models — print.batch","text":"Prints average loss forecast combination.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/print.batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for batch models — print.batch","text":"","code":"# S3 method for batch print(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/print.batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for batch models — print.batch","text":"x Object class inheriting 'batch' ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/print.online.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for online models — print.online","title":"Print method for online models — print.online","text":"Prints average loss experts forecast combination.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/print.online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for online models — print.online","text":"","code":"# S3 method for online print(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/print.online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for online models — print.online","text":"x Object class inheriting 'online' ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/profoc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Package Info — profoc-package","title":"Package Info — profoc-package","text":"Use multiple online-aggregation algorithms combine probabilistic forecasts using CRPS Learning described Berrisch, Ziel: \"CRPS Learning\", 2021. primary function package called online. doi:10.1016/j.jeconom.2021.11.008","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/profoc-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package Info — profoc-package","text":"Index:  package yet installed build time.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/profoc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package Info — profoc-package","text":"Maintainer: Jonathan Berrisch mailto:Jonathan@Berrisch.biz Co-Author: Florian Ziel","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/profoc-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Package Info — profoc-package","text":"Berrisch, Ziel: \"CRPS Learning\", 2021 doi:10.1016/j.jeconom.2021.11.008 doi:10.48550/arXiv.2102.00968","code":""},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics tidy ggplot2 autoplot","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/splines2_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create B-Spline basis — splines2_basis","title":"Create B-Spline basis — splines2_basis","text":"function creates B-Spline matrix.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/splines2_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create B-Spline basis — splines2_basis","text":"","code":"splines2_basis(x, knots, deg, periodic = FALSE, intercept = TRUE)"},{"path":"https://profoc.berrisch.biz/dev/reference/splines2_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create B-Spline basis — splines2_basis","text":"x Vector values. knots Vector knots. deg Degree Spline functions. periodic Whether basis periodic . intercept Whether firs column kept.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/splines2_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create B-Spline basis — splines2_basis","text":"Returns matrix B-Spline basis functions.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/splines2_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create B-Spline basis — splines2_basis","text":"","code":"n <- 9 deg <- 3 mu <- 0.35 x <- 0:1000 / 1000  knots <- make_knots(n, mu = mu, deg = deg)  B <- splines2_basis(x, knots, deg) ts.plot(B, col = 1:dim(B)[2])   # Periodic Case B <- splines2_basis(x, knots, deg, periodic = TRUE) ts.plot(B, col = 1:dim(B)[2])"},{"path":"https://profoc.berrisch.biz/dev/reference/summary.online.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for online models — summary.online","title":"Summary method for online models — summary.online","text":"Calculates parameters chosen optimization aggregates losses.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/summary.online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for online models — summary.online","text":"","code":"# S3 method for online summary(object, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/summary.online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for online models — summary.online","text":"object Object class inheriting 'online' ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.experts_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the Experts' losses of an Online object — tidy.online.experts_loss","title":"Tidy the Experts' losses of an Online object — tidy.online.experts_loss","text":"tidy transform experts_loss array online object tibble better suited plotting analysis.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.experts_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the Experts' losses of an Online object — tidy.online.experts_loss","text":"","code":"# S3 method for online.experts_loss tidy(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.experts_loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the Experts' losses of an Online object — tidy.online.experts_loss","text":"x experts_loss online object. ... currently used.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.experts_loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy the Experts' losses of an Online object — tidy.online.experts_loss","text":"tibble columns t  d  p  k w corresponding time, marginals, probabilities, experts_loss online-learning computation.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.forecaster_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the Experts' losses of an Online object — tidy.online.forecaster_loss","title":"Tidy the Experts' losses of an Online object — tidy.online.forecaster_loss","text":"tidy transform `forecaster_loss`` array online object tibble better suited plotting analysis.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.forecaster_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the Experts' losses of an Online object — tidy.online.forecaster_loss","text":"","code":"# S3 method for online.forecaster_loss tidy(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.forecaster_loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the Experts' losses of an Online object — tidy.online.forecaster_loss","text":"x forecaster_loss online object. ... currently used.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.forecaster_loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy the Experts' losses of an Online object — tidy.online.forecaster_loss","text":"tibble columns t  d  p  k w corresponding time, marginals, probabilities, forecaster_loss online-learning computation.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the Predictions of an Online object — tidy.online.predictions","title":"Tidy the Predictions of an Online object — tidy.online.predictions","text":"tidy transform predictions array online object tibble better suited plotting analysis.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the Predictions of an Online object — tidy.online.predictions","text":"","code":"# S3 method for online.predictions tidy(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the Predictions of an Online object — tidy.online.predictions","text":"x predictions online object. ... currently used.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy the Predictions of an Online object — tidy.online.predictions","text":"tibble columns t  d  p  k w corresponding time, marginals, probabilities, predictions online-learning computation.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the Weights of an Online object — tidy.online.weights","title":"Tidy the Weights of an Online object — tidy.online.weights","text":"tidy transform weights array online object tibble better suited plotting analysis.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the Weights of an Online object — tidy.online.weights","text":"","code":"# S3 method for online.weights tidy(x, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the Weights of an Online object — tidy.online.weights","text":"x weights online object. ... currently used.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/tidy.online.weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy the Weights of an Online object — tidy.online.weights","text":"tibble columns t  d  p  k w corresponding time, marginals, probabilities, experts, weights online-learning computation.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/update.online.html","id":null,"dir":"Reference","previous_headings":"","what":"Update method for online models — update.online","title":"Update method for online models — update.online","text":"Continues learning using new observations new expert advice.","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/update.online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update method for online models — update.online","text":"","code":"# S3 method for online update(object, new_y, new_experts = NULL, trace = FALSE, ...)"},{"path":"https://profoc.berrisch.biz/dev/reference/update.online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update method for online models — update.online","text":"object Object class inheriting 'online' new_y new observations new_experts new expert predictions. must left unspecified trace progress bar shall shown. Defaults FALSE model already contains expert predictions corresponding new_y. ... arguments ignored","code":""},{"path":"https://profoc.berrisch.biz/dev/reference/update.online.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update method for online models — update.online","text":"update.online produces updated model object.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-121","dir":"Changelog","previous_headings":"","what":"profoc 1.2.1","title":"profoc 1.2.1","text":"CRAN release: 2023-08-25","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"improvements-1-2-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"profoc 1.2.1","text":"online() outputs now include predictions_got_sorted. matrix indicates whether quantile crossing occured predictions sorted. tidy() methods added convert weights, predictions loss objects online() output tibble (analysis, plotting etc.) Get started article added docs. Docs development version added website","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"profoc 1.2.1","text":"release fixes import / export autoplot() method. consequence, ggplot2 became new dependency package.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-120","dir":"Changelog","previous_headings":"","what":"profoc 1.2.0","title":"profoc 1.2.0","text":"CRAN release: 2023-06-13","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"improvements-1-2-0","dir":"Changelog","previous_headings":"","what":"Improvements:","title":"profoc 1.2.0","text":"Periodic splines penalties added smoothing weights online().","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-1-2-0","dir":"Changelog","previous_headings":"Improvements:","what":"Internal changes","title":"profoc 1.2.0","text":"profoc now depends R >= 4.3.0 ensure C++17 support.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-111","dir":"Changelog","previous_headings":"","what":"profoc 1.1.1","title":"profoc 1.1.1","text":"CRAN release: 2023-03-02","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Fixes:","title":"profoc 1.1.1","text":"Distribution knots now correct ncp < 0.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-110","dir":"Changelog","previous_headings":"","what":"profoc 1.1.0","title":"profoc 1.1.0","text":"CRAN release: 2023-01-13","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"improvements-1-1-0","dir":"Changelog","previous_headings":"","what":"Improvements:","title":"profoc 1.1.0","text":"New penalty() function works equidistant non-equidistant knots.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Fixes:","title":"profoc 1.1.0","text":"Calculation P-Spline penalty non-uniform B-Splines used.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-100","dir":"Changelog","previous_headings":"","what":"profoc 1.0.0","title":"profoc 1.0.0","text":"CRAN release: 2022-12-23","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 1.0.0","text":"Now, online() saves memory reporting past_performance past_predictions_grid. However, cumulative performance recent predictions w.r.t parameter grid always included output. former used internally choosing best hyperparameter set, latter updating weights. Depending data parameter space considered, objects may get large. can still opt-include output setting save_past_performance = TRUE save_past_predictions_grid = TRUE online().","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-1-0-0","dir":"Changelog","previous_headings":"Changes:","what":"Internal changes","title":"profoc 1.0.0","text":"Minor fixes improvements online() reduce memory usage.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-095","dir":"Changelog","previous_headings":"","what":"profoc 0.9.5","title":"profoc 0.9.5","text":"CRAN release: 2022-12-16","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-9-5","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"profoc 0.9.5","text":"Now online() able sample grids 2^64-1 rows. new cpp sampling function sample_int() works similar sample.int() also respects seeds set set.seed().","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-094","dir":"Changelog","previous_headings":"","what":"profoc 0.9.4","title":"profoc 0.9.4","text":"CRAN release: 2022-11-30","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"fixes-0-9-4","dir":"Changelog","previous_headings":"","what":"Fixes:","title":"profoc 0.9.4","text":"parametergrids lets provide custom grids parameters online()","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-9-4","dir":"Changelog","previous_headings":"Fixes:","what":"Internal changes","title":"profoc 0.9.4","text":"Significantly improved initialization efficiency online() using large grids parameters","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-093","dir":"Changelog","previous_headings":"","what":"profoc 0.9.3","title":"profoc 0.9.3","text":"CRAN release: 2022-04-21","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"fixes-0-9-3","dir":"Changelog","previous_headings":"","what":"Fixes:","title":"profoc 0.9.3","text":"forget_past_performance effect online() Improved fixed documentation","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-092","dir":"Changelog","previous_headings":"","what":"profoc 0.9.2","title":"profoc 0.9.2","text":"CRAN release: 2022-03-17","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"fixes-0-9-2","dir":"Changelog","previous_headings":"","what":"Fixes:","title":"profoc 0.9.2","text":"Resolved problem plotting multivariate probabilistic models","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-091","dir":"Changelog","previous_headings":"","what":"profoc 0.9.1","title":"profoc 0.9.1","text":"CRAN release: 2022-02-25","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-0-9-1","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 0.9.1","text":"Basis matrices created differently now. solves issue basis functions always sum 1 non-equidistant knot sequences used.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-090","dir":"Changelog","previous_headings":"","what":"profoc 0.9.0","title":"profoc 0.9.0","text":"CRAN release: 2022-02-07","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-0-9-0","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 0.9.0","text":"Just pass TxK matrix y TxDxPxK array experts Smoothing improved. See documentation details revised interface. summary.online can used obtain selected parameters online models","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-9-0","dir":"Changelog","previous_headings":"Changes:","what":"Internal changes","title":"profoc 0.9.0","text":"online uses Rcpp Modules bundle data functionality exposed C++ class Improvements plot methods","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-085","dir":"Changelog","previous_headings":"","what":"profoc 0.8.5","title":"profoc 0.8.5","text":"CRAN release: 2021-10-22","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-0-8-5","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 0.8.5","text":"init takes named list currently intial_weights R0 initial weights initial cumulative regret can provided. PxK 1xK.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-8-5","dir":"Changelog","previous_headings":"Changes:","what":"Internal changes","title":"profoc 0.8.5","text":"Internal changes improve readability Resolve C++ compilation warnings","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-084","dir":"Changelog","previous_headings":"","what":"profoc 0.8.4","title":"profoc 0.8.4","text":"CRAN release: 2021-09-15 Remove unused C++17 dependency","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-083","dir":"Changelog","previous_headings":"","what":"profoc 0.8.3","title":"profoc 0.8.3","text":"CRAN release: 2021-08-15","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-0-8-3","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 0.8.3","text":"regret can now passed array , list, e.g. list(regret = regret_array, share = 0.2) provided regret mixed regret calculated online. loss can also provided list, see . weighting scheme can activated setting qw_crps=TRUE defaults FALSE due better performance","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-8-3","dir":"Changelog","previous_headings":"Changes:","what":"Internal changes","title":"profoc 0.8.3","text":"Changes splines2 package required changes side. affected creation b-spline basis. See https://github.com/BerriJ/profoc/pull/3","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"profoc-080","dir":"Changelog","previous_headings":"","what":"profoc 0.8.0","title":"profoc 0.8.0","text":"CRAN release: 2021-07-28","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-0-8-0","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 0.8.0","text":"First release CRAN profoc function renamed online consistency. Added batch function apply batch-learning. Added oracle function approximate oracle. Update, predict, plot, print methods added online batch objects.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"interface-0-8-0","dir":"Changelog","previous_headings":"Changes:","what":"Interface:","title":"profoc 0.8.0","text":"Unfortunately, decided apply significant changes API. likely breaks old code. Please refer respective function documentation information.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-8-0","dir":"Changelog","previous_headings":"Changes:","what":"Internal changes:","title":"profoc 0.8.0","text":"b-spline basis now calculated using fast C++ function imported splines2 R package. source code now distributed across different files.","code":""},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-0-7-0","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 0.7.0","text":"spline functions rewritten add ability using non-equidistant knot sequence penalty term defined Sobolev space. change induces breaking changes small parts API.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"interface-0-7-0","dir":"Changelog","previous_headings":"Changes:","what":"Interface:","title":"profoc 0.7.0","text":"ndiff defines degree differencing creating penalty term. values 1 2 weighted sum difference penalization matrices used. rel_nseg replaced knot_distance ( distance knots). Defaults 0.025, corresponds grid steps knot_distance_power = 1 (default). new parameter knot_distance_power defines knots uniformly distributed. Defaults 1, corresponds equidistant case. Values less 1 create knots center, values 1 concentrate knots tails. new parameter allow_quantile_crossing defines quantile crossing allowed. Defaults false, means predictions sorted.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-7-0","dir":"Changelog","previous_headings":"Changes:","what":"Internal changes:","title":"profoc 0.7.0","text":"Functions calculating b-spline basis now exported R internal functions package. can accessed using package:::function notation.","code":""},{"path":[]},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"interface-0-6-0","dir":"Changelog","previous_headings":"Changes:","what":"Interface:","title":"profoc 0.6.0","text":"y must now matrix either T × 1 T × P. trace specifies whether progress bar printed . Default TRUE. loss_function lets now specify “quantile”, “expectile” “percentage”. functions generalized Gneitling 2009. power can scaled loss_parameter. latter defaults 1, leads well-known quantile, squared, absolute percentage loss. gradient lets specify whether learning algorithm consider actual loss linearized version using gradient loss. Defaults TRUE (gradient-based learning). forget_performance added. defines share past performance ignored selecting best parameter combination. Renamed forget parameter forget_regret underline reference regret. New init_weights parameter. either Kx1 KxP matrix specifying experts’ starting weights. Add lead_time parameter. offset expert forecasts. Defaults 0 means experts predict t+1 t. Setting h means experts’ predictions refer t+1+h time t. weight updates delay accordingly.","code":""},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"internal-changes-0-6-0","dir":"Changelog","previous_headings":"Changes:","what":"Internal changes:","title":"profoc 0.6.0","text":"expert forecasts observations provided, excessive expert forecasts used prediction using recent weights. tau now optional. defaults 1:P/(P+1). scalar given tau repeated P times. latter useful multivariate settings. pinball_loss loss_pred functions replaced flexible function called loss. weights object changed (T+1×K×P) array (T+1×P×K) array match objects’ dimensions. Now following indexing scheme consistent throughout package: (Time, Probabilities, Experts, Parameter combination) Fixed Bug caused single quantile calculations fail. Various internal changes improve readability performance.","code":""},{"path":[]},{"path":"https://profoc.berrisch.biz/dev/news/index.html","id":"changes-0-5-2","dir":"Changelog","previous_headings":"","what":"Changes:","title":"profoc 0.5.2","text":"Initial release GitHub","code":""}]
