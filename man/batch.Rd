% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{batch}
\alias{batch}
\title{Probabilistic Forecast Combination - Batch}
\usage{
batch(y, experts, tau, affine = FALSE, positive = FALSE, intercept = FALSE,
debias = TRUE, initial_window = 30, expanding_window = TRUE,
loss_function = "quantile", loss_parameter = 1, lambda = -Inf,
forget = 0, forget_performance = 0, fixed_share = 0, ndiff = 1, deg = 3,
knot_distance = 0.1, knot_distance_power = 1, trace = TRUE, lead_time = 0,
allow_quantile_crossing = FALSE, soft_threshold = -Inf, hard_threshold = -Inf)
}
\arguments{
\item{y}{A numeric matrix of realizations. In probabilistic
settings a matrix of dimension Tx1. In multivariate setting
a TxP matrix can be used. In the latter case each slice of
the experts array gets evaluated using the corresponding
column of the y matrix.}

\item{experts}{A an array of predictions with dimension
(Observations, Quantiles, Experts).}

\item{tau}{A numeric vector of probabilities.}

\item{affine}{Defines wether weights are summing to 1 or now. Defaults to FALSE.}

\item{positive}{Defines wether weights have to positive. Defaults to FALSE.}

\item{intercept}{Determines if an intercept is added, defaults to FALSE. In this case a new expert is added as expert 1 allways predicting 1.}

\item{debias}{Defines wether the intercepts weight is constrainted or not.
If TRUE (the default), the intercept weight is unconstrained.
Only affects the results if affine and or positive is set to TRUE.
If FALSE, the intercept is treated as an expert.}

\item{initial_window}{Defines the size of the initial estimaton window.}

\item{expanding_window}{Defines wether an expanding window or a rolling window shall be used for batch optimization. Defaults to TRUE.}

\item{loss_function}{Either "quantile", "expectile" or "percentage".}

\item{loss_parameter}{Optional parameter scaling the power of the loss function.}

\item{lambda}{Penalization parameter used in the smoothing Step.
-Inf causes the smoothing step to be skipped (default).}

\item{forget}{Adds an exponential forgetting to the optimization. Past observations will get less influence in the optimization. Defaults to 0 which corresponds to no forgetting.}

\item{forget_performance}{Share of past performance not to be considered, resp. to be
forgotten in every iteration of the algorithm when choosing the parameter combination. Defaults to 0.}

\item{fixed_share}{Amount of fixed share to be added to the weights.
Defaults to 0. 1 leads to uniform weights.}

\item{ndiff}{Degree of the differencing operator in the smoothing equation. 1.5 (default) leads to shrikage towards a constant. Can also be 2 or any value in between. If a value in between is used, a weighted sum of the first and second differentiation matrix is calculated.}

\item{deg}{Degree of the B-Spine basis functions.}

\item{knot_distance}{determines the distance of the knots. Defaults to 0.1 which corrsponds to the grid steps when knot_distance_power = 1 (the default).}

\item{knot_distance_power}{Parameter which defines the symetrie of the b-spline basis. Defaults to 1 which corresponds to the equidistant case. Values less than 1 create more knots in the center while values above 1 concentrate more knots in the tails.}

\item{trace}{If a progessbar shall be printed. Defaults to TRUE.}

\item{lead_time}{offset for expert forecasts. Defaults to 0, which means that
experts forecast t+1 at t. Setting this to h means experts predictions refer
to t+1+h at time t. The weight updates delay accordingly.}

\item{allow_quantile_crossing}{Shall quantile crossing be allowed? Defaults to false which means that predictions are sorted in ascending order.}

\item{soft_threshold}{If specified the following soft threshold will be applied
to the weights: w = sgn(w)*max(abs(w)-t,0) where t is the soft_threshold parameter.
Defaults to -inf which means that no threshold will be applied.}

\item{hard_threshold}{If specified the following hard thresholding will be applied
to the weights: w = w*(abs(w)>t) where t is the threshold_hard parameter.
Defaults to -inf which means that no threshold will be applied.}
}
\value{
Returns weights and corresponding predictions.
It is possible to calculate the best convex combination
of weights by setting affine and positive to TRUE.
}
\description{
Returns predictions and weights calculated by sequential numeric
optimization. The optimization is done stepwise, allways
calculating a one-step-ahead forecast.
}
